@page "/lexicon"
@inject DatabaseHelper databaseHelper
@inject ILogger<Lexicon> _logger

<h3>Lexicon</h3>

<table class="table">
    <thead>
        <tr>
            <AuthorizeView Roles="@(AuthLevel.Writer.ToString()+" ,"+AuthLevel.Administrator.ToString())">
                <Authorized>
                    <th scope="col">Word ID</th>
                </Authorized>
            </AuthorizeView>
            @foreach (string row in Data.First().KeyValues.Keys)
            {
                <th scope="col">@row</th>
            }
        </tr>
    </thead>
    <tbody>

        @foreach (var item in Data)
        {
            <LexiconRow ColID="@item.Id.ToString()" RowContent="@item" />
        }

    </tbody>
</table>

@code {
    private List<LexiconItem> Data { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (databaseHelper.Enabled)
        {
            Data = await databaseHelper.GetLexiconItemsFromDB(databaseHelper.GetConnection());
        }
        else
        {
            try
            {
                Data = new List<LexiconItem>();
                for (int i = 0; i < 5; i++)
                {
                    Data.Add(new LexiconItem(i) { KeyValues = new Dictionary<string, LexiconValue>() });
                    Data[i].KeyValues.Add("1", new LexiconValue("This"));
                    Data[i].KeyValues.Add("2", new LexiconValue("is"));
                    Data[i].KeyValues.Add("3", new LexiconValue("an"));
                    Data[i].KeyValues.Add("4", new LexiconValue("Example"));
                }
            }
            catch(Exception e)
            {
                _logger.LogError(e.ToString());
            }
        }
    }
}
